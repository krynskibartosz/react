{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/travauxmorpion/src/App.js\";\nimport React from 'react';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : \"O\";\n    this.setState({\n      squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    winner ? status = `${winner} a gagné` : status = `Prochain joueur : ${this.state.xIsNext ? 'X' : 'O'}`; // Condition ternaire à choix multiple (+p condition)\n    // condition 1 ? éxécution 1 :\n    // condition 2 ? éxécution 2 :\n    // condition 3 ? éxécution 3 :\n    // éxécution 4;\n    // cette condition ternaire ===\n    // if(cond1){éxécution 1}\n    // else if(cond2) {éxécution 2}\n    // else if(cond3) {éxécution 3}\n    // {éxécution 4}\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Board, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst calculateWinner = squares => {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i]; // (squares[a] && squares[a] === squares[b] && squares[a] === squares[c])  ? squares[a] : \"\";\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}; // ========================================\n\n\nexport default Game;","map":{"version":3,"sources":["/home/user/Documents/travauxmorpion/src/App.js"],"names":["React","Square","props","onClick","value","Board","Component","constructor","state","squares","Array","fill","xIsNext","handleClick","i","slice","calculateWinner","setState","renderSquare","render","winner","status","Game","lines","length","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\n\nfunction Square(props) {     \n        return (\n            <button \n        className=\"square\" \n        onClick={props.onClick}\n        >\n          {props.value}\n        </button>\n      );\n}\nclass Board extends React.Component {\n    constructor (props) {\n        super(props);\n            this.state = {\n                squares : Array(9).fill(null),\n                xIsNext : true,\n        };\n    }\n\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        if (calculateWinner(squares) || squares[i]){\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : \"O\";\n        this.setState({\n            squares,\n            xIsNext : !this.state.xIsNext,\n        })\n    }\n\n\n\n    renderSquare(i) {\n      return( \n            <Square\n                value={this.state.squares[i]} \n                onClick = {() => this.handleClick(i)}\n            />\n\n        );\n    }\nok\n    render() {\n        const winner = calculateWinner(this.state.squares);\n        let status;\n\n        winner ? status = `${winner} a gagné` : status = `Prochain joueur : ${this.state.xIsNext ? 'X' : 'O'}`;\n        // Condition ternaire à choix multiple (+p condition)\n            // condition 1 ? éxécution 1 :\n            // condition 2 ? éxécution 2 :\n            // condition 3 ? éxécution 3 :\n            // éxécution 4;\n\n            // cette condition ternaire ===\n            // if(cond1){éxécution 1}\n            // else if(cond2) {éxécution 2}\n            // else if(cond3) {éxécution 3}\n            // {éxécution 4}\n\n\n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  class Game extends React.Component {\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  const calculateWinner = squares => {\n      const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a,b,c] = lines[i];\n            // (squares[a] && squares[a] === squares[b] && squares[a] === squares[c])  ? squares[a] : \"\";\n            if( squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n                return squares[a];\n            }\n        }\n    return null\n  }\n\n  // ========================================\n  \n  \nexport default Game;\n"]},"metadata":{},"sourceType":"module"}